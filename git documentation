git config --global user.email "rabindra@gmail.com"
git config  --global user.name "Rabindra yadav"

how do i check congig

git config --global user.name

how do i open visual studio
code .

Learn git part 1:

1) git init
2) git add [filename] || A  // or // git add -A
3) git status
4) git commit -m "msg about change"
5) git remote add origin repoName
6) git push origin master
7) git clone repoName
8) git pull origin master


9) git branch branchName



// logs command

1) git log
2) git log -p
3) git log --oneline  // show in one line
4) git log -2  // last 2 commit
5) git log -i --grep="text"  // for searching
6) git log -i -p --grep="text"  // for searching
7) git log -i --author="rabindra singh"
8) git log -i --author="rabindra yadav" // ignore case sensetive




1) Create the branch on your local machine and switch in this branch 
	git checkout -b [name_of_your_new_branch] or git branch branchName

2) Change working branch :
	git checkout [name_of_your_new_branch]

3) Push the branch on github :
	git push origin [name_of_your_new_branch]

4) Add a new remote for your branch :
	git remote add [name_of_your_remote] [name_of_your_new_branch]

5) Update your branch when the original branch from official repository has been updated :
	git fetch [name_of_your_remote]

6) Then you need to apply to merge changes, if your branch is derivated from develop you need to do :
	 git merge [name_of_your_remote]/develop

7) Delete a branch on your local filesystem :
	git branch -d [name_of_your_new_branch]

8) To force the deletion of local branch on your filesystem :
	git branch -D [name_of_your_new_branch]

9) Delete the branch on github :
	git push origin :[name_of_your_new_branch]

10) 			 
11) Merge branch from dev to master:( your current branch is master)
	git merge dev

12) Revert commit code :
	git revert bcc88f01ea1d7766da3a4f079926c487fb5a1e62

13) stash command
	git stash
        git stash list // show all stash file from archieve
        git stash pop // changes comming and show for push or commit.	
        git stash drop // stash file delete for always
        git statsh save "save name for future"   // for save in future
        git stash apply {Unique Id} //stash@{0}  // return in file
        git stash drop {uniqueid} //stash@{0}  // delete 
        git stash clean // for all stash list clean  // stash list clean
        git stash -p //  for interactive mode
        

14) squash commit
 if you want merge the lot's of commit in a commit, that process is called squash

	git rebase -i origin/baseBranch
	change in terminal s/p/d/e
	
	git push origin [current Branch name] -f
	
	
15) latest code fetch, rebase,reset and merge

	1. Giet leest code 
        1. Git fetch origin
    	2. create new branch from base branch
            (1). git checkout -b [your branch name] [base branch name]
    	3. make changes in code and add files in git repository
            (1). git add .
    	4.  Commit the code in git repository
            (1) Git commit -m ‘commit message’
    	5. push local branch to git repository
            (1) git push origin [your branch name]
	Must Do:
	1. Make sure your local branch is rebased every day or a suitable point
	1. If there is no merge conflict and if still you have not push your code than 
	1. git rebase -i origin/base branch 
	2. If there is no merge conflict and if you have already push your code at least once
	1. git push origin branch name -f
	3. If there are merge conflicts
	1. Resolve merge conflicts and make sure no force push is done. never remove other developer’s code
	2. git add .
	3. git rebase —continue 
	4. In terminal your commits name will show there skip first one and squash all of rest, put # before all of commits 
	5. Than command + X and cmd +y
	6. git push origin branch name
how do i rebase 

git checkout develop  // then
git rebase master  // if coming conflict then conflict resolve and then 
git add . //then
git rebase --continue // after rebase no any changes
git checkout master // and then
git merge feature

by rabindra singh

