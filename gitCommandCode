git config --global user.email "rabindra@gmail.com"
git config  --global user.name "Rabindra yadav"

Learn git part 1:

1) git init
2) git add [filename] || A
3) git status
4) git commit -m "msg about change"
5) git remote add origin repoName
6) git push origin master
7) git clone repoName
8) git pull origin master


9) git branch branchName



// logs command

1) git log
2) git log -p
3) git log --oneline  // show in one line
4) git log -2  // last 2 commit
5) git log -i --grep="text"  // for searching
6) git log -i -p --grep="text"  // for searching
7) git log -i --author="rabindra singh"
8) git log -i --author="rabindra yadav" // ignore case sensetive




1) Create the branch on your local machine and switch in this branch 
	git checkout -b [name_of_your_new_branch] or git branch branchName

2) Change working branch :
	git checkout [name_of_your_new_branch]

3) Push the branch on github :
	git push origin [name_of_your_new_branch]

4) Add a new remote for your branch :
	git remote add [name_of_your_remote] [name_of_your_new_branch]

5) Update your branch when the original branch from official repository has been updated :
	git fetch [name_of_your_remote]

6) Then you need to apply to merge changes, if your branch is derivated from develop you need to do :
	 git merge [name_of_your_remote]/develop

7) Delete a branch on your local filesystem :
	git branch -d [name_of_your_new_branch]

8) To force the deletion of local branch on your filesystem :
	git branch -D [name_of_your_new_branch]

9) Delete the branch on github :
	git push origin :[name_of_your_new_branch]

10) 			 
11) Merge branch from dev to master:( your current branch is master)
	git merge dev

12) Revert commit code :
	git revert bcc88f01ea1d7766da3a4f079926c487fb5a1e62

13) stash command
	git stash
        git stash list // show all stash file from archieve
        git stash pop // changes comming and show for push or commit.	
        git stash drop // stash file delete for always
        git statsh save "save name for future"   // for save in future
        git stash apply {Unique Id} //stash@{0}  // return in file
        git stash drop {uniqueid} //stash@{0}  // delete 
        git stash clean // for all stash list clean  // stash list clean
        git stash -p //  for interactive mode
        
        
        
        
        
        
        
        
        
        
        
        
        
        
// remote setting for user1
        git init
        git add index.html
        git commit -m "initial commit"
        git remote -v  // no any remote
        git push origin master
        
// remote setting for user2
        git clone https://github.com/Vasu122/testGit.git
        git checkout -b branchname
        
        

// Git Cherry-pick

        git log        
        git cherry-pick 
        
// ssh key generate and set
        
        ssh-keygen
        /home/vasudev/.ssh/id_rsa.pub. // location of ssh key // pub means public file
        and then go to settings then ssh and gps keys click
        then paste code in ssh field.        
                

// how to make your git commands shorter
        
        git config --global alias.co checkout  // checkout short name co      















webpack.config.js
var webpack = require("webpack");
var path = require("path");
var ExtractTextPlugin = require("extract-text-webpack-plugin");

 
var config = {
    entry: {
home:'./private/index.jsx'
    },
    output: {
        path: './public',        
        filename: 'bundle.js'
    },
  module: {
    loaders: [
{
test : /\.jsx$/,
loader: "babel-loader",
exclude:/node_modules/,
    },
{
test: /\.json$/,
loader: 'json-loader'
       },
{
test: /\.scss$/, 
loader: ExtractTextPlugin.extract('css!sass')
},
{
test: /\.(mp4|ogg|svg|eot|ttf|woff|woff2|jpg|png)$/,
loader: 'file-loader'
}
  ]
  },
 
plugins: [
        new ExtractTextPlugin("[name].css")
    ],
      resolve: {
extensions: ['', '.js', '.jsx', '.json'],
alias: {
           	react: __dirname + '/node_modules/react'
       	}	
}
};
 
module.exports = config;


server.js

var express=require('express');
var path=require('path');

var app=express();

app.use(express.static('./public'));

app.use('/',function(req,res){

res.sendFile(path.resolve('index.html'));
});

var port=3000;
app.listen(port, function(error){
if(error) 
throw error;
console.log("Express server listning on port",port);
});















10

I just tried this and it worked:

create-react-app myapp

yarn (or npm) build

Open IIS manager and create a new website
Point it at your build folder in the newly created react project
Create a new application pool
Right click on the app pool and under Process model find Identity, click the three dots
Select custom and enter your windows credentials.
If this doesnt work you may need to enable read/write access to the files so right click on the website and select edit permissions

Go to Security and hit edit, select Authenticated Users and on the bottom of the dialog check the modify/full control /read/write boxes where applicable. Do the same for your windows user that should be listed under Groups or user names section. Hit apply/save.

Right click the website and go to Manage Website then browse.

Boom.


https://dev.to/sumitkharche/how-to-deploy-react-application-on-iis-server-1ied    /// very very important

https://stackoverflow.com/questions/54941140/how-to-deploy-react-on-iis

https://support.microsoft.com/en-in/help/315122/http-error-404-file-or-directory-not-found-error-message-when-you-requ

https://serverfault.com/questions/948775/how-can-i-debug-windows-server-2016-iis-error-404-file-or-directory-not-found
          
                        


